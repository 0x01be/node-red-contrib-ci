[
    {
        "id": "d5e939e4.8a1528",
        "type": "tab",
        "label": "Pipeline",
        "disabled": false,
        "info": ""
    },
    {
        "id": "45ece1d1.7a3e98",
        "type": "docker-config",
        "z": "",
        "protocol": "http",
        "hostname": "docker",
        "port": "2375"
    },
    {
        "id": "56a66bde.68bccc",
        "type": "elasticsearch-config",
        "z": "",
        "index": "events",
        "protocol": "http",
        "hostname": "elasticsearch",
        "port": 9200
    },
    {
        "id": "ab02313a.ccfc4",
        "type": "swagger-doc",
        "z": "",
        "summary": "",
        "description": "",
        "tags": "pipeline",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "payload",
                "in": "body",
                "required": true,
                "schema": {
                    "type": "object"
                }
            }
        ],
        "responses": {
            "201": {
                "description": "Created"
            }
        },
        "deprecated": false
    },
    {
        "id": "841968cc.b46d28",
        "type": "build-image",
        "z": "d5e939e4.8a1528",
        "name": "",
        "docker": "45ece1d1.7a3e98",
        "remote": "",
        "nocache": false,
        "pull": false,
        "x": 190,
        "y": 180,
        "wires": [
            [
                "3753917e.4a47d6"
            ],
            [
                "69a2612e.49e32"
            ]
        ]
    },
    {
        "id": "3753917e.4a47d6",
        "type": "create-container",
        "z": "d5e939e4.8a1528",
        "name": "",
        "docker": "45ece1d1.7a3e98",
        "workspace": "",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "a5e5c699.e8f578"
            ]
        ]
    },
    {
        "id": "1d377adf.eef77d",
        "type": "read-logs",
        "z": "d5e939e4.8a1528",
        "name": "",
        "docker": "45ece1d1.7a3e98",
        "follow": true,
        "stderr": false,
        "x": 190,
        "y": 360,
        "wires": [
            [
                "b85b68ce.f5d58",
                "69a2612e.49e32"
            ]
        ]
    },
    {
        "id": "a5526538.697be",
        "type": "http in",
        "z": "d5e939e4.8a1528",
        "name": "",
        "url": "/build",
        "method": "post",
        "upload": false,
        "swaggerDoc": "ab02313a.ccfc4",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "181e02f9.b1ba25"
            ]
        ]
    },
    {
        "id": "b85b68ce.f5d58",
        "type": "function",
        "z": "d5e939e4.8a1528",
        "name": "started ‚úì",
        "func": "const expected = 'Started flows';\n\nconst success = (typeof msg.payload.stream === 'string')\n                && msg.payload.stream.includes(expected);\n\nif (success) {\n    node.send({\n        _msgid: msg._msgid,\n        paths: { started: true },\n        payload: { container: msg.payload.container }\n    });\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "8f321918.7601f8",
                "c6e6ed1.fc4061"
            ]
        ]
    },
    {
        "id": "69a2612e.49e32",
        "type": "function",
        "z": "d5e939e4.8a1528",
        "name": "clean",
        "func": "if (msg.payload.stream) {\n    msg.payload.stream = msg.payload.stream.replace('\\r\\n','').trim();\n    \n    const regexp = /[0-9]{1,2} [A-Z][a-z][a-z] [0-9]{2}:[0-9]{2}:[0-9]{2} - /;\n    \n    if (regexp.test(msg.payload.stream)) {\n        msg.payload.stream = msg.payload.stream.replace(regexp,'').trim();\n        \n        node.send(msg);\n    } else if (msg.payload.stream !== \"\") {\n        node.send(msg);\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 186,
        "wires": [
            [
                "48200780.8d64e8"
            ]
        ]
    },
    {
        "id": "181e02f9.b1ba25",
        "type": "function",
        "z": "d5e939e4.8a1528",
        "name": "commit",
        "func": "const commit = msg.payload.commits[0].id;\nconst repository = msg.payload.repository.clone_url;\nconst url = msg.payload.commits[0].url.replace('commit', 'raw');\nconst remote = `${url}/Dockerfile`;\n\nconst payload = {\n    commit: commit.substring(0, 12),\n    repository: repository,\n    remote: remote,\n    time: new Date(),\n    build: msg._msgid,\n};\n\nmsg.payload = payload;\n\nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "1a1aa325.531e45",
                "841968cc.b46d28"
            ]
        ]
    },
    {
        "id": "48200780.8d64e8",
        "type": "index-event",
        "z": "d5e939e4.8a1528",
        "name": "",
        "elasticsearch": "56a66bde.68bccc",
        "x": 530,
        "y": 240,
        "wires": []
    },
    {
        "id": "a5e5c699.e8f578",
        "type": "start-stop-container",
        "z": "d5e939e4.8a1528",
        "name": "",
        "operation": "start",
        "docker": "45ece1d1.7a3e98",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "1d377adf.eef77d",
                "26e22b6f.52b744"
            ]
        ]
    },
    {
        "id": "1c674a40.7ff4c6",
        "type": "start-stop-container",
        "z": "d5e939e4.8a1528",
        "name": "",
        "operation": "stop",
        "docker": "45ece1d1.7a3e98",
        "x": 510,
        "y": 540,
        "wires": [
            [
                "22ea78e7.9a4638"
            ]
        ]
    },
    {
        "id": "22ea78e7.9a4638",
        "type": "remove-container",
        "z": "d5e939e4.8a1528",
        "name": "üóëÔ∏è",
        "docker": "45ece1d1.7a3e98",
        "force": false,
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "26e22b6f.52b744",
        "type": "container-stats",
        "z": "d5e939e4.8a1528",
        "name": "",
        "docker": "45ece1d1.7a3e98",
        "stream": true,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "48200780.8d64e8"
            ]
        ]
    },
    {
        "id": "8f321918.7601f8",
        "type": "wait-paths",
        "z": "d5e939e4.8a1528",
        "name": "started & idle ‚úì",
        "paths": "[\"started\",\"idle\"]",
        "timeout": "20000",
        "finalTimeout": "20000",
        "x": 400,
        "y": 460,
        "wires": [
            [
                "749112c9.567ddc"
            ]
        ]
    },
    {
        "id": "af14c231.2a6968",
        "type": "function",
        "z": "d5e939e4.8a1528",
        "name": "idle ‚úì",
        "func": "if (msg.payload.computed\n    && msg.payload.computed.cpu\n    && msg.payload.computed.cpu.percent\n    && Math.trunc(msg.payload.computed.cpu.percent) < 1) {\n    node.send({\n        _msgid: msg._msgid,\n        paths: { idle: true },\n        payload: { container: msg.payload.container }\n    });\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 380,
        "wires": [
            [
                "b29fb081.b955b"
            ]
        ]
    },
    {
        "id": "b29fb081.b955b",
        "type": "rbe",
        "z": "d5e939e4.8a1528",
        "name": "once",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.container",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "8f321918.7601f8"
            ]
        ]
    },
    {
        "id": "c6e6ed1.fc4061",
        "type": "container-stats",
        "z": "d5e939e4.8a1528",
        "name": "",
        "docker": "45ece1d1.7a3e98",
        "stream": true,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "af14c231.2a6968"
            ]
        ]
    },
    {
        "id": "1a1aa325.531e45",
        "type": "http response",
        "z": "d5e939e4.8a1528",
        "name": "created",
        "statusCode": "201",
        "headers": {},
        "x": 300,
        "y": 40,
        "wires": []
    },
    {
        "id": "749112c9.567ddc",
        "type": "commit-container",
        "z": "d5e939e4.8a1528",
        "name": "",
        "docker": "45ece1d1.7a3e98",
        "repo": "0x01be/node-red-contrib-ci",
        "tag": "cool",
        "x": 360,
        "y": 540,
        "wires": [
            [
                "1c674a40.7ff4c6",
                "1dc50807.ee15f8"
            ]
        ]
    },
    {
        "id": "1dc50807.ee15f8",
        "type": "push-image",
        "z": "d5e939e4.8a1528",
        "name": "",
        "docker": "45ece1d1.7a3e98",
        "auth": "",
        "x": 510,
        "y": 600,
        "wires": []
    }
]
